import Foundation

struct Post: Identifiable, Codable {
    let id: UUID
    let author: String
    let role: String
    let content: String
    let timestamp: Date
    let isSponsored: Bool
    let linkedOpportunity: BusinessOpportunity?
    let linkedInvestment: Asset?
    let images: [String]  // URLs or image data
    let isAutoGenerated: Bool
    
    var userHandle: String {
        "@\(author.replacingOccurrences(of: " ", with: ""))"
    }
    
    var body: String {
        content
    }
    
    var isGameEvent: Bool {
        linkedOpportunity != nil || linkedInvestment != nil
    }
    
    enum CodingKeys: String, CodingKey {
        case id, author, role, content, timestamp, isSponsored, linkedOpportunity, linkedInvestment, images, isAutoGenerated
    }
    
    init(id: UUID = UUID(), 
         author: String, 
         role: String, 
         content: String, 
         timestamp: Date = Date(), 
         isSponsored: Bool = false, 
         linkedOpportunity: BusinessOpportunity? = nil,
         linkedInvestment: Asset? = nil,
         images: [String] = [],
         isAutoGenerated: Bool = false) {
        self.id = id
        self.author = author
        self.role = role
        self.content = content
        self.timestamp = timestamp
        self.isSponsored = isSponsored
        self.linkedOpportunity = linkedOpportunity
        self.linkedInvestment = linkedInvestment
        self.images = images
        self.isAutoGenerated = isAutoGenerated
    }
    
    static var example: Post {
        Post(
            author: "CryptoTrader",
            role: "Investment Advisor",
            content: "Hot investment opportunity! Bitcoin is trending! üöÄ",
            isSponsored: true,
            linkedInvestment: Asset(
                symbol: "BTC",
                name: "Bitcoin",
                quantity: 0,
                currentPrice: 45000,
                purchasePrice: 45000,
                type: .crypto
            )
        )
    }
    
    static let fillerPosts = [
        Post(id: UUID(), author: "techBro", role: "Developer", content: "Just deployed my first blockchain app! üöÄ #Web3", timestamp: Date(), isSponsored: false, linkedOpportunity: nil, linkedInvestment: nil),
        Post(id: UUID(), author: "codeCrafter", role: "Senior Dev", content: "Why do programmers prefer dark mode? Because light attracts bugs! üòÖ", timestamp: Date(), isSponsored: false, linkedOpportunity: nil, linkedInvestment: nil),
        Post(id: UUID(), author: "startupGuru", role: "Founder", content: "Remember: failing fast is just another way of saying 'learning quickly' üí°", timestamp: Date(), isSponsored: false, linkedOpportunity: nil, linkedInvestment: nil),
        Post(id: UUID(), author: "devLife", role: "Developer", content: "Coffee.exe has stopped working. Please restart programmer.", timestamp: Date(), isSponsored: false, linkedOpportunity: nil, linkedInvestment: nil),
        Post(id: UUID(), author: "techNews", role: "Tech Journalist", content: "New JavaScript framework just dropped! Time to rewrite everything! üîÑ", timestamp: Date(), isSponsored: false, linkedOpportunity: nil, linkedInvestment: nil),
        Post(id: UUID(), author: "productPerson", role: "PM", content: "Hot take: JIRA tickets are just fancy todo lists üìù", timestamp: Date(), isSponsored: false, linkedOpportunity: nil, linkedInvestment: nil),
        Post(id: UUID(), author: "debugQueen", role: "Lead Dev", content: "Found a bug in production. It's not a bug, it's an undocumented feature! ‚ú®", timestamp: Date(), isSponsored: false, linkedOpportunity: nil, linkedInvestment: nil),
        Post(id: UUID(), author: "designerDude", role: "UI Designer", content: "Just spent 3 hours picking between two slightly different shades of blue üé®", timestamp: Date(), isSponsored: false, linkedOpportunity: nil, linkedInvestment: nil)
    ]
    
    static let gameEventPosts = [
        // Opportunities
        Post(id: UUID(), author: "recruiterPro", role: "Tech Recruiter", content: "Looking for a talented developer for a contract role! DM for details üíº #hiring", timestamp: Date(), isSponsored: true, linkedOpportunity: BusinessOpportunity(
            title: "Contract Developer Role",
            description: "6-month contract for experienced developer",
            source: .customer,
            opportunityType: .startup,
            monthlyRevenue: 12000,
            monthlyExpenses: 2000,
            setupCost: 0,
            potentialSaleMultiple: 1.0,
            symbol: "Dev Contract"
        ), linkedInvestment: nil),
        
        Post(id: UUID(), author: "startupCEO", role: "Founder", content: "Need a freelance developer for a quick project. Paying well! üí∞", timestamp: Date(), isSponsored: true, linkedOpportunity: BusinessOpportunity(
            title: "Freelance Dev Project",
            description: "3-month project for MVP development",
            source: .customer,
            opportunityType: .startup,
            monthlyRevenue: 8000,
            monthlyExpenses: 1000,
            setupCost: 2000,
            potentialSaleMultiple: 1.5,
            symbol: "Dev Freelance"
        ), linkedInvestment: nil),
        
        // Trending Topics
        Post(id: UUID(), author: "techTrends", role: "Tech Analyst", content: "New programming language taking the industry by storm! Time to learn? üìö", timestamp: Date(), isSponsored: true, linkedOpportunity: BusinessOpportunity(
            title: "New Tech Training",
            description: "Investment in new programming language skills",
            source: .socialMedia,
            opportunityType: .startup,
            monthlyRevenue: 2000,
            monthlyExpenses: 500,
            setupCost: 5000,
            potentialSaleMultiple: 2.0,
            symbol: "Tech Training"
        ), linkedInvestment: nil),
        
        Post(id: UUID(), author: "marketWatch", role: "Market Analyst", content: "Tech stocks hitting all-time highs! üìä", timestamp: Date(), isSponsored: true, linkedOpportunity: nil, linkedInvestment: nil)
    ]
} 